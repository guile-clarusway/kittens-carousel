AWSTemplateFormatVersion: 2010-09-09
Description: |
  This CloudFormation Template is written to run Kittens Carousel Static Website on EC2. 
  Kittens Carousel Static Website will be deployed on Amazon Linux 2023 EC2 Instance with custom 
  security group which allows http connections on port 80 and ssh port 22 from anywhere. Kittens Carousel Static Website
  will be downloaded from my Public Github repository, then be deployed on Apache Web Server.

Parameters:
  ImageIdParameter:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64'

  KeyPairParameter:
    Description: Select your keypair.
    Type: AWS::EC2::KeyPair::KeyName

  InstanceTypeParameter:
    Description: Select your instance type.
    Type: String
    Default: t2.micro
    AllowedValues:
       - t2.micro
       - t2.nano
       - t2.small

Resources:
  MyWebServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageIdParameter
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyPairParameter
      SecurityGroups: 
        - !Ref MyWebServerSecurityGroup
      Tags: 
        - Key: Name
          Value: !Sub "Web Server of ${AWS::StackName}"
      UserData: !Base64 |
        #! /bin/bash
        dnf update -y
        dnf install httpd -y
        FOLDER="https://raw.githubusercontent.com/guile-clarusway/kittens-carousel/refs/heads/main/static-web"
        cd /var/www/html
        wget ${FOLDER}/index.html
        wget ${FOLDER}/cat0.jpg
        wget ${FOLDER}/cat1.jpg
        wget ${FOLDER}/cat2.jpg
        wget ${FOLDER}/cat3.png
        systemctl start httpd
        systemctl enable httpd

  MyWebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows SSH and HTTP. # Required
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80

Outputs:
  DNSNameofMyWebServer:
    Description: DNS Name of My Web Server Instance.
    Value: !Sub
      - http://${PublicDNS}
      - PublicDNS: !GetAtt MyWebServer.PublicDnsName